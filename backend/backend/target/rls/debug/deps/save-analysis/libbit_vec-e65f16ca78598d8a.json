{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1","program":"C:\\Users\\Alex\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","bit_vec","C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=e65f16ca78598d8a","-C","extra-filename=-e65f16ca78598d8a","--out-dir","c:\\Users\\Alex\\Documents\\GitHub\\apsko\\backend\\backend\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Alex\\Documents\\GitHub\\apsko\\backend\\backend\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Alex\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Alex\\Documents\\GitHub\\apsko\\backend\\backend\\target\\rls\\debug\\deps\\libbit_vec-e65f16ca78598d8a.rmeta"},"prelude":{"crate_id":{"name":"bit_vec","disambiguator":[1091394344361551451,12097677742534220360]},"crate_root":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src","external_crates":[{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[18086859731710399847,10284985903167786594]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[7894171165123925799,1138153282057520136]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[13588323328630583110,6322937768936249793]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","num":4,"id":{"name":"std","disambiguator":[485752663891264790,8957311619763174036]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4981221114026975734,7560613652030165248]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[14761482230397314318,7759443649452366185]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9184279872459162418,17237017963472574266]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17533675247542074538,1761975124356943313]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7993782675770172864,12706040849351126287]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2821791754508214868,4424070148662641494]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[910629799165843388,8471953781625026915]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[5889018422681230134,5892037208047200338]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[2601722915210761880,4253013904849941641]}}],"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":1592,"byte_end":66148,"line_start":31,"line_end":2128,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":1592,"byte_end":66148,"line_start":31,"line_end":2128,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":37},{"krate":0,"index":195},{"krate":0,"index":201},{"krate":0,"index":207},{"krate":0,"index":213},{"krate":0,"index":219},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":45},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":61},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":114},{"krate":0,"index":118},{"krate":0,"index":122},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":135},{"krate":0,"index":139},{"krate":0,"index":225},{"krate":0,"index":230},{"krate":0,"index":141},{"krate":0,"index":148},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":162},{"krate":0,"index":166},{"krate":0,"index":171},{"krate":0,"index":175},{"krate":0,"index":177},{"krate":0,"index":234},{"krate":0,"index":238},{"krate":0,"index":182},{"krate":0,"index":188},{"krate":0,"index":192}],"decl_id":null,"docs":" Collections implemented with bit vectors.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":3184,"byte_end":3194,"line_start":86,"line_end":86,"column_start":1,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":3901,"byte_end":3909,"line_start":120,"line_end":120,"column_start":11,"column_end":19},"name":"BitBlock","qualname":"::BitBlock","value":"BitBlock: Copy + Add<Self, Output = Self> + Sub<Self, Output = Self> + Shl<usize, Output\n= Self> + Shr<usize, Output = Self> + Not<Output = Self> + BitAnd<Self, Output\n= Self> + BitOr<Self, Output = Self> + BitXor<Self, Output = Self> + Rem<Self,\nOutput = Self> + Eq + Ord + hash::Hash","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36}],"decl_id":null,"docs":" Abstracts over a pile of bits (basically unsigned primitives)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":4217,"byte_end":4221,"line_start":136,"line_end":136,"column_start":8,"column_end":12},"name":"bits","qualname":"::BitBlock::bits","value":"fn () -> usize","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" How many bits it has\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":4285,"byte_end":4290,"line_start":139,"line_end":139,"column_start":8,"column_end":13},"name":"bytes","qualname":"::BitBlock::bytes","value":"fn () -> usize","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" How many bytes it has\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":4268,"byte_end":4277,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":4392,"byte_end":4401,"line_start":141,"line_end":141,"column_start":8,"column_end":17},"name":"from_byte","qualname":"::BitBlock::from_byte","value":"fn (byte: u8) -> Self","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Convert a byte into this type (lowest-order bits set)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":4480,"byte_end":4490,"line_start":143,"line_end":143,"column_start":8,"column_end":18},"name":"count_ones","qualname":"::BitBlock::count_ones","value":"fn (self) -> usize","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Count the number of 1's in the bitwise repr\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":4530,"byte_end":4534,"line_start":145,"line_end":145,"column_start":8,"column_end":12},"name":"zero","qualname":"::BitBlock::zero","value":"fn () -> Self","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Get `0`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":4569,"byte_end":4572,"line_start":147,"line_end":147,"column_start":8,"column_end":11},"name":"one","qualname":"::BitBlock::one","value":"fn () -> Self","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Get `1`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":6209,"byte_end":6215,"line_start":214,"line_end":214,"column_start":12,"column_end":18},"name":"BitVec","qualname":"::BitVec","value":"BitVec {  }","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44}],"decl_id":null,"docs":" The bitvector type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":8007,"byte_end":8010,"line_start":271,"line_end":271,"column_start":12,"column_end":15},"name":"new","qualname":"<BitVec<u32>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `BitVec`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":7986,"byte_end":7995,"line_start":270,"line_end":270,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":8431,"byte_end":8440,"line_start":290,"line_end":290,"column_start":12,"column_end":21},"name":"from_elem","qualname":"<BitVec<u32>>::from_elem","value":"fn (nbits: usize, bit: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BitVec` that holds `nbits` elements, setting each element\n to `bit`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":8410,"byte_end":8419,"line_start":289,"line_end":289,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":9119,"byte_end":9132,"line_start":308,"line_end":308,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BitVec<u32>>::with_capacity","value":"fn (nbits: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `BitVec` with the specified capacity.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":9098,"byte_end":9107,"line_start":307,"line_end":307,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":9895,"byte_end":9905,"line_start":330,"line_end":330,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<BitVec<u32>>::from_bytes","value":"fn (bytes: &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Transforms a byte-vector into a `BitVec`. Each byte becomes eight bits,\n with the most significant bits of each byte coming first. Each\n bit becomes `true` if equal to 1 or `false` if equal to 0.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":11210,"byte_end":11217,"line_start":371,"line_end":371,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<BitVec<u32>>::from_fn","value":"fn <F> (len: usize, mut f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BitVec` of the specified length where the value at each index\n is `f(index)`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":11189,"byte_end":11198,"line_start":370,"line_end":370,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":12449,"byte_end":12455,"line_start":410,"line_end":410,"column_start":12,"column_end":18},"name":"blocks","qualname":"<BitVec<B>>::blocks","value":"fn (&self) -> Blocks<B>","parent":null,"children":[],"decl_id":null,"docs":" Iterator over the underlying blocks of data\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":12428,"byte_end":12437,"line_start":409,"line_end":409,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":12669,"byte_end":12676,"line_start":419,"line_end":419,"column_start":12,"column_end":19},"name":"storage","qualname":"<BitVec<B>>::storage","value":"fn (&self) -> &[B]","parent":null,"children":[],"decl_id":null,"docs":" Exposes the raw block storage of this BitVec","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":12648,"byte_end":12657,"line_start":418,"line_end":418,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":12883,"byte_end":12894,"line_start":427,"line_end":427,"column_start":19,"column_end":30},"name":"storage_mut","qualname":"<BitVec<B>>::storage_mut","value":"fn (&mut self) -> &mut Vec<B>","parent":null,"children":[],"decl_id":null,"docs":" Exposes the raw block storage of this BitVec","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":12855,"byte_end":12864,"line_start":426,"line_end":426,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":13910,"byte_end":13913,"line_start":460,"line_end":460,"column_start":12,"column_end":15},"name":"get","qualname":"<BitVec<B>>::get","value":"fn (&self, i: usize) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the value at index `i`, or `None` if the index is out of bounds.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":13889,"byte_end":13898,"line_start":459,"line_end":459,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":14535,"byte_end":14538,"line_start":487,"line_end":487,"column_start":12,"column_end":15},"name":"set","qualname":"<BitVec<B>>::set","value":"fn (&mut self, i: usize, x: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of a bit at an index `i`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":14514,"byte_end":14523,"line_start":486,"line_end":486,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":15243,"byte_end":15250,"line_start":512,"line_end":512,"column_start":12,"column_end":19},"name":"set_all","qualname":"<BitVec<B>>::set_all","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets all bits to 1.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":15222,"byte_end":15231,"line_start":511,"line_end":511,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":15704,"byte_end":15710,"line_start":532,"line_end":532,"column_start":12,"column_end":18},"name":"negate","qualname":"<BitVec<B>>::negate","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Flips all bits.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":15683,"byte_end":15692,"line_start":531,"line_end":531,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":16544,"byte_end":16549,"line_start":563,"line_end":563,"column_start":12,"column_end":17},"name":"union","qualname":"<BitVec<B>>::union","value":"fn (&mut self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Calculates the union of two bitvectors. This acts like the bitwise `or`\n function.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":16523,"byte_end":16532,"line_start":562,"line_end":562,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":17392,"byte_end":17401,"line_start":593,"line_end":593,"column_start":12,"column_end":21},"name":"intersect","qualname":"<BitVec<B>>::intersect","value":"fn (&mut self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Calculates the intersection of two bitvectors. This acts like the\n bitwise `and` function.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":17371,"byte_end":17380,"line_start":592,"line_end":592,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":18512,"byte_end":18522,"line_start":630,"line_end":630,"column_start":12,"column_end":22},"name":"difference","qualname":"<BitVec<B>>::difference","value":"fn (&mut self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Calculates the difference between two bitvectors.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":18491,"byte_end":18500,"line_start":629,"line_end":629,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":18933,"byte_end":18936,"line_start":648,"line_end":648,"column_start":12,"column_end":15},"name":"all","qualname":"<BitVec<B>>::all","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all bits are 1.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":18912,"byte_end":18921,"line_start":647,"line_end":647,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":19613,"byte_end":19617,"line_start":670,"line_end":670,"column_start":12,"column_end":16},"name":"iter","qualname":"<BitVec<B>>::iter","value":"fn (&self) -> Iter<B>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the elements of the vector in order.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":19592,"byte_end":19601,"line_start":669,"line_end":669,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":20259,"byte_end":20265,"line_start":691,"line_end":691,"column_start":12,"column_end":18},"name":"append","qualname":"<BitVec<B>>::append","value":"fn (&mut self, other: &mut Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Moves all bits from `other` into `Self`, leaving `other` empty.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":21450,"byte_end":21459,"line_start":736,"line_end":736,"column_start":12,"column_end":21},"name":"split_off","qualname":"<BitVec<B>>::split_off","value":"fn (&mut self, at: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Splits the `BitVec` into two at the given bit,\n retaining the first half in-place and returning the second one.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":22863,"byte_end":22867,"line_start":789,"line_end":789,"column_start":12,"column_end":16},"name":"none","qualname":"<BitVec<B>>::none","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all bits are 0.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":22842,"byte_end":22851,"line_start":788,"line_end":788,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":23256,"byte_end":23259,"line_start":807,"line_end":807,"column_start":12,"column_end":15},"name":"any","qualname":"<BitVec<B>>::any","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if any bit is 1.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":23235,"byte_end":23244,"line_start":806,"line_end":806,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":23976,"byte_end":23984,"line_start":832,"line_end":832,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<BitVec<B>>::to_bytes","value":"fn (&self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Organises the bits into bytes, such that the first bit in the\n `BitVec` becomes the high-order bit of the first byte. If the\n size of the `BitVec` is not a multiple of eight then trailing bits\n will be filled-in with `false`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":25234,"byte_end":25240,"line_start":875,"line_end":875,"column_start":12,"column_end":18},"name":"eq_vec","qualname":"<BitVec<B>>::eq_vec","value":"fn (&self, v: &[bool]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Compares a `BitVec` to a slice of `bool`s.\n Both the `BitVec` and slice must have the same length.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":25213,"byte_end":25222,"line_start":874,"line_end":874,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":25784,"byte_end":25792,"line_start":895,"line_end":895,"column_start":12,"column_end":20},"name":"truncate","qualname":"<BitVec<B>>::truncate","value":"fn (&mut self, len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shortens a `BitVec`, dropping excess elements.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":25763,"byte_end":25772,"line_start":894,"line_end":894,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":26555,"byte_end":26562,"line_start":922,"line_end":922,"column_start":12,"column_end":19},"name":"reserve","qualname":"<BitVec<B>>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more bits to be inserted in the given\n `BitVec`. The collection may reserve more space to avoid frequent reallocations.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":26534,"byte_end":26543,"line_start":921,"line_end":921,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":27626,"byte_end":27639,"line_start":952,"line_end":952,"column_start":12,"column_end":25},"name":"reserve_exact","qualname":"<BitVec<B>>::reserve_exact","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves the minimum capacity for exactly `additional` more bits to be inserted in the\n given `BitVec`. Does nothing if the capacity is already sufficient.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":27605,"byte_end":27614,"line_start":951,"line_end":951,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":28315,"byte_end":28323,"line_start":973,"line_end":973,"column_start":12,"column_end":20},"name":"capacity","qualname":"<BitVec<B>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the capacity in bits for this bit vector. Inserting any\n element less than this amount will not trigger a resizing.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":28294,"byte_end":28303,"line_start":972,"line_end":972,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":28877,"byte_end":28881,"line_start":993,"line_end":993,"column_start":12,"column_end":16},"name":"grow","qualname":"<BitVec<B>>::grow","value":"fn (&mut self, n: usize, value: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Grows the `BitVec` in-place, adding `n` copies of `value` to the `BitVec`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":30826,"byte_end":30829,"line_start":1045,"line_end":1045,"column_start":12,"column_end":15},"name":"pop","qualname":"<BitVec<B>>::pop","value":"fn (&mut self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Removes the last bit from the BitVec, and returns it. Returns None if the BitVec is empty.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":30805,"byte_end":30814,"line_start":1044,"line_end":1044,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":31511,"byte_end":31515,"line_start":1075,"line_end":1075,"column_start":12,"column_end":16},"name":"push","qualname":"<BitVec<B>>::push","value":"fn (&mut self, elem: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Pushes a `bool` onto the end.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":31490,"byte_end":31499,"line_start":1074,"line_end":1074,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":31871,"byte_end":31874,"line_start":1086,"line_end":1086,"column_start":12,"column_end":15},"name":"len","qualname":"<BitVec<B>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of bits in this vector\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":31850,"byte_end":31859,"line_start":1085,"line_end":1085,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":32098,"byte_end":32105,"line_start":1092,"line_end":1092,"column_start":19,"column_end":26},"name":"set_len","qualname":"<BitVec<B>>::set_len","value":"fn (&mut self, len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bits that this BitVec considers initialized.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":32070,"byte_end":32079,"line_start":1091,"line_end":1091,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":32243,"byte_end":32251,"line_start":1098,"line_end":1098,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BitVec<B>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if there are no bits in this vector\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":32222,"byte_end":32231,"line_start":1097,"line_end":1097,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":32353,"byte_end":32358,"line_start":1102,"line_end":1102,"column_start":12,"column_end":17},"name":"clear","qualname":"<BitVec<B>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears all bits in this vector.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":32332,"byte_end":32341,"line_start":1101,"line_end":1101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":32722,"byte_end":32735,"line_start":1112,"line_end":1112,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<BitVec<B>>::shrink_to_fit","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the underlying storage as much as\n possible.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":35348,"byte_end":35352,"line_start":1215,"line_end":1215,"column_start":12,"column_end":16},"name":"Iter","qualname":"::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229}],"decl_id":null,"docs":" An iterator for `BitVec`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":36366,"byte_end":36374,"line_start":1254,"line_end":1254,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":37207,"byte_end":37213,"line_start":1290,"line_end":1290,"column_start":12,"column_end":18},"name":"Blocks","qualname":"::Blocks","value":"Blocks {  }","parent":null,"children":[{"krate":0,"index":237}],"decl_id":null,"docs":" An iterator over the blocks of a `BitVec`.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":6488,"byte_end":6494,"line_start":222,"line_end":222,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":7808,"byte_end":7814,"line_start":260,"line_end":260,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":11465,"byte_end":11471,"line_start":382,"line_end":382,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":32826,"byte_end":32832,"line_start":1117,"line_end":1117,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":32966,"byte_end":32972,"line_start":1122,"line_end":1122,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":33186,"byte_end":33192,"line_start":1131,"line_end":1131,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":33509,"byte_end":33515,"line_start":1143,"line_end":1143,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":33827,"byte_end":33833,"line_start":1156,"line_end":1156,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":33980,"byte_end":33986,"line_start":1163,"line_end":1163,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":34572,"byte_end":34578,"line_start":1182,"line_end":1182,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":34795,"byte_end":34801,"line_start":1191,"line_end":1191,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":35028,"byte_end":35034,"line_start":1201,"line_end":1201,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":35276,"byte_end":35282,"line_start":1211,"line_end":1211,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":35463,"byte_end":35467,"line_start":1220,"line_end":1220,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":35949,"byte_end":35953,"line_start":1235,"line_end":1235,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":36145,"byte_end":36149,"line_start":1242,"line_end":1242,"column_start":45,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":36467,"byte_end":36475,"line_start":1259,"line_end":1259,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":36674,"byte_end":36682,"line_start":1268,"line_end":1268,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":36866,"byte_end":36874,"line_start":1275,"line_end":1275,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":36917,"byte_end":36923,"line_start":1277,"line_end":1277,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":37295,"byte_end":37301,"line_start":1294,"line_end":1294,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":37575,"byte_end":37581,"line_start":1308,"line_end":1308,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":37740,"byte_end":37746,"line_start":1315,"line_end":1315,"column_start":45,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":3912,"byte_end":3916,"line_start":121,"line_end":121,"column_start":2,"column_end":6},"kind":"SuperTrait","from":{"krate":1,"index":1445},"to":{"krate":0,"index":30}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":3920,"byte_end":3923,"line_start":122,"line_end":122,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":1,"index":1493},"to":{"krate":0,"index":30}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":3946,"byte_end":3949,"line_start":123,"line_end":123,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":1,"index":1498},"to":{"krate":0,"index":30}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":3972,"byte_end":3975,"line_start":124,"line_end":124,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":1,"index":1566},"to":{"krate":0,"index":30}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":3999,"byte_end":4002,"line_start":125,"line_end":125,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":1,"index":1572},"to":{"krate":0,"index":30}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":4026,"byte_end":4029,"line_start":126,"line_end":126,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":1,"index":1547},"to":{"krate":0,"index":30}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":4046,"byte_end":4052,"line_start":127,"line_end":127,"column_start":2,"column_end":8},"kind":"SuperTrait","from":{"krate":1,"index":1551},"to":{"krate":0,"index":30}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":4075,"byte_end":4080,"line_start":128,"line_end":128,"column_start":2,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":1556},"to":{"krate":0,"index":30}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":4103,"byte_end":4109,"line_start":129,"line_end":129,"column_start":2,"column_end":8},"kind":"SuperTrait","from":{"krate":1,"index":1561},"to":{"krate":0,"index":30}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":4132,"byte_end":4135,"line_start":130,"line_end":130,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":1,"index":1514},"to":{"krate":0,"index":30}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":4158,"byte_end":4160,"line_start":131,"line_end":131,"column_start":2,"column_end":4},"kind":"SuperTrait","from":{"krate":1,"index":1940},"to":{"krate":0,"index":30}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":4164,"byte_end":4167,"line_start":132,"line_end":132,"column_start":2,"column_end":5},"kind":"SuperTrait","from":{"krate":1,"index":1960},"to":{"krate":0,"index":30}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":4177,"byte_end":4181,"line_start":133,"line_end":133,"column_start":8,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":6488},"to":{"krate":0,"index":30}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":6488,"byte_end":6494,"line_start":222,"line_end":222,"column_start":36,"column_end":42},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":41},"to":{"krate":1,"index":1677}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":7808,"byte_end":7814,"line_start":260,"line_end":260,"column_start":6,"column_end":12},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":41},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":11465,"byte_end":11471,"line_start":382,"line_end":382,"column_start":19,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":41},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":32826,"byte_end":32832,"line_start":1117,"line_end":1117,"column_start":31,"column_end":37},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":41},"to":{"krate":1,"index":2080}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":32966,"byte_end":32972,"line_start":1122,"line_end":1122,"column_start":42,"column_end":48},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":41},"to":{"krate":1,"index":3388}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":33186,"byte_end":33192,"line_start":1131,"line_end":1131,"column_start":36,"column_end":42},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":41},"to":{"krate":1,"index":3401}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":33509,"byte_end":33515,"line_start":1143,"line_end":1143,"column_start":29,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":41},"to":{"krate":1,"index":2056}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":33827,"byte_end":33833,"line_start":1156,"line_end":1156,"column_start":34,"column_end":40},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":41},"to":{"krate":1,"index":1970}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":33980,"byte_end":33986,"line_start":1163,"line_end":1163,"column_start":27,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":41},"to":{"krate":1,"index":1960}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":34572,"byte_end":34578,"line_start":1182,"line_end":1182,"column_start":34,"column_end":40},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":41},"to":{"krate":1,"index":6831}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":34795,"byte_end":34801,"line_start":1191,"line_end":1191,"column_start":34,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":41},"to":{"krate":1,"index":6488}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":35028,"byte_end":35034,"line_start":1201,"line_end":1201,"column_start":38,"column_end":44},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":41},"to":{"krate":1,"index":1936}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":35276,"byte_end":35282,"line_start":1211,"line_end":1211,"column_start":31,"column_end":37},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":41},"to":{"krate":1,"index":1940}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":35463,"byte_end":35467,"line_start":1220,"line_end":1220,"column_start":36,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":225},"to":{"krate":1,"index":3202}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":35949,"byte_end":35953,"line_start":1235,"line_end":1235,"column_start":47,"column_end":51},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":225},"to":{"krate":1,"index":3360}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":36145,"byte_end":36149,"line_start":1242,"line_end":1242,"column_start":45,"column_end":49},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":225},"to":{"krate":1,"index":3380}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":36467,"byte_end":36475,"line_start":1259,"line_end":1259,"column_start":32,"column_end":40},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":162},"to":{"krate":1,"index":3202}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":36674,"byte_end":36682,"line_start":1268,"line_end":1268,"column_start":43,"column_end":51},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":162},"to":{"krate":1,"index":3360}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":36866,"byte_end":36874,"line_start":1275,"line_end":1275,"column_start":41,"column_end":49},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":162},"to":{"krate":1,"index":3380}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":36917,"byte_end":36923,"line_start":1277,"line_end":1277,"column_start":36,"column_end":42},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":41},"to":{"krate":1,"index":3392}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":37295,"byte_end":37301,"line_start":1294,"line_end":1294,"column_start":36,"column_end":42},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":234},"to":{"krate":1,"index":3202}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":37575,"byte_end":37581,"line_start":1308,"line_end":1308,"column_start":47,"column_end":53},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":234},"to":{"krate":1,"index":3360}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bit-vec-0.6.1\\src\\lib.rs","byte_start":37740,"byte_end":37746,"line_start":1315,"line_end":1315,"column_start":45,"column_end":51},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":234},"to":{"krate":1,"index":3380}}]}