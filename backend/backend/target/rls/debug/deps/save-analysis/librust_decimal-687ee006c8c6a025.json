{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2","program":"C:\\Users\\Alex\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--edition=2018","--crate-name","rust_decimal","C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"serde\"","-C","metadata=687ee006c8c6a025","-C","extra-filename=-687ee006c8c6a025","--out-dir","c:\\Users\\Alex\\Documents\\GitHub\\apsko\\backend\\backend\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Alex\\Documents\\GitHub\\apsko\\backend\\backend\\target\\rls\\debug\\deps","--extern","byteorder=c:\\Users\\Alex\\Documents\\GitHub\\apsko\\backend\\backend\\target\\rls\\debug\\deps\\libbyteorder-a39c99a98cc87926.rmeta","--extern","num=c:\\Users\\Alex\\Documents\\GitHub\\apsko\\backend\\backend\\target\\rls\\debug\\deps\\libnum-f0b3fd7954ec07a4.rmeta","--extern","serde=c:\\Users\\Alex\\Documents\\GitHub\\apsko\\backend\\backend\\target\\rls\\debug\\deps\\libserde-c896a4abba737c7a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Alex\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Alex\\Documents\\GitHub\\apsko\\backend\\backend\\target\\rls\\debug\\deps\\librust_decimal-687ee006c8c6a025.rmeta"},"prelude":{"crate_id":{"name":"rust_decimal","disambiguator":[14757218007953807720,9037181016210223701]},"crate_root":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src","external_crates":[{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[485752663891264790,8957311619763174036]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[18086859731710399847,10284985903167786594]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7894171165123925799,1138153282057520136]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13588323328630583110,6322937768936249793]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4981221114026975734,7560613652030165248]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[14761482230397314318,7759443649452366185]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9184279872459162418,17237017963472574266]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17533675247542074538,1761975124356943313]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7993782675770172864,12706040849351126287]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2821791754508214868,4424070148662641494]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[910629799165843388,8471953781625026915]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[5889018422681230134,5892037208047200338]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[2601722915210761880,4253013904849941641]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","num":14,"id":{"name":"num","disambiguator":[9095112056703209705,5478090697574269410]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","num":15,"id":{"name":"num_bigint","disambiguator":[9227547664536739175,7118577923177289169]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","num":16,"id":{"name":"num_integer","disambiguator":[5440953750735127729,11605535580663638205]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","num":17,"id":{"name":"num_traits","disambiguator":[6593241168112692331,9107782469675624635]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","num":18,"id":{"name":"num_complex","disambiguator":[14503827496663086023,7578920433622459406]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","num":19,"id":{"name":"num_iter","disambiguator":[14790640871083233040,11789276795411479930]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","num":20,"id":{"name":"num_rational","disambiguator":[376950688354083014,9362818785551568168]}},{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\serde_types.rs","num":21,"id":{"name":"serde","disambiguator":[958054393957561515,10449706105080901003]}}],"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\lib.rs","byte_start":0,"byte_end":1565,"line_start":1,"line_end":51,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\lib.rs","byte_start":1437,"byte_end":1444,"line_start":46,"line_end":46,"column_start":19,"column_end":26},"alias_span":null,"name":"Decimal","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\lib.rs","byte_start":1446,"byte_end":1462,"line_start":46,"line_end":46,"column_start":28,"column_end":44},"alias_span":null,"name":"RoundingStrategy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":440},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\lib.rs","byte_start":1480,"byte_end":1485,"line_start":47,"line_end":47,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":154},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\lib.rs","byte_start":1524,"byte_end":1537,"line_start":50,"line_end":50,"column_start":19,"column_end":32},"alias_span":null,"name":"FromPrimitive","value":"","parent":{"krate":0,"index":340}},{"kind":"Use","ref_id":{"krate":17,"index":312},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\lib.rs","byte_start":1539,"byte_end":1542,"line_start":50,"line_end":50,"column_start":34,"column_end":37},"alias_span":null,"name":"One","value":"","parent":{"krate":0,"index":340}},{"kind":"Use","ref_id":{"krate":17,"index":129},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\lib.rs","byte_start":1544,"byte_end":1555,"line_start":50,"line_end":50,"column_start":39,"column_end":50},"alias_span":null,"name":"ToPrimitive","value":"","parent":{"krate":0,"index":340}},{"kind":"Use","ref_id":{"krate":17,"index":302},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\lib.rs","byte_start":1557,"byte_end":1561,"line_start":50,"line_end":50,"column_start":52,"column_end":56},"alias_span":null,"name":"Zero","value":"","parent":{"krate":0,"index":340}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\lib.rs","byte_start":0,"byte_end":1565,"line_start":1,"line_end":51,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":292},{"krate":0,"index":303},{"krate":0,"index":336},{"krate":0,"index":339},{"krate":0,"index":340}],"decl_id":null,"docs":"\n A Decimal implementation written in pure Rust suitable\n for financial calculations that require significant integral\n and fractional digits with no round-off errors.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":3641,"byte_end":3656,"line_start":82,"line_end":82,"column_start":12,"column_end":27},"name":"UnpackedDecimal","qualname":"::decimal::UnpackedDecimal","value":"UnpackedDecimal { is_negative, scale, hi, mid, lo }","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351}],"decl_id":null,"docs":" `UnpackedDecimal` contains unpacked representation of `Decimal` where each component\n of decimal-format stored in it's own field\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":3630,"byte_end":3759,"line_start":82,"line_end":88,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":347},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":3667,"byte_end":3678,"line_start":83,"line_end":83,"column_start":9,"column_end":20},"name":"is_negative","qualname":"::decimal::UnpackedDecimal::is_negative","value":"bool","parent":{"krate":0,"index":346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":3694,"byte_end":3699,"line_start":84,"line_end":84,"column_start":9,"column_end":14},"name":"scale","qualname":"::decimal::UnpackedDecimal::scale","value":"u32","parent":{"krate":0,"index":346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":349},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":3714,"byte_end":3716,"line_start":85,"line_end":85,"column_start":9,"column_end":11},"name":"hi","qualname":"::decimal::UnpackedDecimal::hi","value":"u32","parent":{"krate":0,"index":346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":350},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":3731,"byte_end":3734,"line_start":86,"line_end":86,"column_start":9,"column_end":12},"name":"mid","qualname":"::decimal::UnpackedDecimal::mid","value":"u32","parent":{"krate":0,"index":346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":351},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":3749,"byte_end":3751,"line_start":87,"line_end":87,"column_start":9,"column_end":11},"name":"lo","qualname":"::decimal::UnpackedDecimal::lo","value":"u32","parent":{"krate":0,"index":346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":4091,"byte_end":4098,"line_start":95,"line_end":95,"column_start":12,"column_end":19},"name":"Decimal","qualname":"::decimal::Decimal","value":"Decimal {  }","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361}],"decl_id":null,"docs":" `Decimal` represents a 128 bit representation of a fixed-precision decimal number.\n The finite set of values of type `Decimal` are of the form m / 10<sup>e</sup>,\n where m is an integer such that -2<sup>96</sup> < m < 2<sup>96</sup>, and e is an integer\n between 0 and 28 inclusive.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":4080,"byte_end":4494,"line_start":95,"line_end":106,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":4991,"byte_end":5006,"line_start":117,"line_end":117,"column_start":5,"column_end":20},"name":"BankersRounding","qualname":"::decimal::RoundingStrategy::BankersRounding","value":"RoundingStrategy::BankersRounding","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":5012,"byte_end":5023,"line_start":118,"line_end":118,"column_start":5,"column_end":16},"name":"RoundHalfUp","qualname":"::decimal::RoundingStrategy::RoundHalfUp","value":"RoundingStrategy::RoundHalfUp","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":5029,"byte_end":5042,"line_start":119,"line_end":119,"column_start":5,"column_end":18},"name":"RoundHalfDown","qualname":"::decimal::RoundingStrategy::RoundHalfDown","value":"RoundingStrategy::RoundHalfDown","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":4968,"byte_end":4984,"line_start":116,"line_end":116,"column_start":10,"column_end":26},"name":"RoundingStrategy","qualname":"::decimal::RoundingStrategy","value":"RoundingStrategy::{BankersRounding, RoundHalfUp, RoundHalfDown}","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64}],"decl_id":null,"docs":" `RoundingStrategy` represents the different strategies that can be used by\n `round_dp_with_strategy`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":5562,"byte_end":5565,"line_start":139,"line_end":139,"column_start":12,"column_end":15},"name":"new","qualname":"<Decimal>::new","value":"fn (num: i64, scale: u32) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Decimal` with a 64 bit `m` representation and corresponding `e` scale.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":6974,"byte_end":6984,"line_start":182,"line_end":182,"column_start":18,"column_end":28},"name":"from_parts","qualname":"<Decimal>::from_parts","value":"fn (lo: u32, mid: u32, hi: u32, negative: bool, scale: u32) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Decimal` using the instances constituent parts.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":7661,"byte_end":7676,"line_start":206,"line_end":206,"column_start":12,"column_end":27},"name":"from_scientific","qualname":"<Decimal>::from_scientific","value":"fn (value: &str) -> Result<Decimal, Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Result` which if successful contains the `Decimal` constitution of\n the scientific notation provided by `value`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":8829,"byte_end":8834,"line_start":242,"line_end":242,"column_start":18,"column_end":23},"name":"scale","qualname":"<Decimal>::scale","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the scale of the decimal number, otherwise known as `e`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":8802,"byte_end":8811,"line_start":241,"line_end":241,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":9321,"byte_end":9329,"line_start":261,"line_end":261,"column_start":12,"column_end":20},"name":"set_sign","qualname":"<Decimal>::set_sign","value":"fn (&mut self, positive: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" An optimized method for changing the sign of a decimal number.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":9874,"byte_end":9883,"line_start":284,"line_end":284,"column_start":12,"column_end":21},"name":"set_scale","qualname":"<Decimal>::set_scale","value":"fn (&mut self, scale: u32) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" An optimized method for changing the scale of a decimal number.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":10448,"byte_end":10457,"line_start":299,"line_end":299,"column_start":18,"column_end":27},"name":"serialize","qualname":"<Decimal>::serialize","value":"fn (&self) -> [u8; 16]","parent":null,"children":[],"decl_id":null,"docs":" Returns a serialized version of the decimal number.\n The resulting byte array will have the following representation:","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":11575,"byte_end":11586,"line_start":327,"line_end":327,"column_start":18,"column_end":29},"name":"deserialize","qualname":"<Decimal>::deserialize","value":"fn (bytes: [u8; 16]) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Deserializes the given bytes into a decimal number.\n The deserialized byte representation must be 16 bytes and adhere to the followign convention:","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":12255,"byte_end":12266,"line_start":338,"line_end":338,"column_start":12,"column_end":23},"name":"is_negative","qualname":"<Decimal>::is_negative","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the decimal is negative.\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.6.3\", note = \"please use `is_sign_negative` instead\")","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":12165,"byte_end":12243,"line_start":337,"line_end":337,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":12468,"byte_end":12479,"line_start":344,"line_end":344,"column_start":12,"column_end":23},"name":"is_positive","qualname":"<Decimal>::is_positive","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the decimal is positive.\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.6.3\", note = \"please use `is_sign_positive` instead\")","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":12378,"byte_end":12456,"line_start":343,"line_end":343,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":12626,"byte_end":12642,"line_start":350,"line_end":350,"column_start":18,"column_end":34},"name":"is_sign_negative","qualname":"<Decimal>::is_sign_negative","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the decimal is negative.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":12591,"byte_end":12608,"line_start":349,"line_end":349,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":12792,"byte_end":12808,"line_start":356,"line_end":356,"column_start":18,"column_end":34},"name":"is_sign_positive","qualname":"<Decimal>::is_sign_positive","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the decimal is positive.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":12757,"byte_end":12774,"line_start":355,"line_end":355,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":12960,"byte_end":12969,"line_start":361,"line_end":361,"column_start":18,"column_end":27},"name":"min_value","qualname":"<Decimal>::min_value","value":"fn () -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns the minimum possible number that `Decimal` can represent.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":13095,"byte_end":13104,"line_start":366,"line_end":366,"column_start":18,"column_end":27},"name":"max_value","qualname":"<Decimal>::max_value","value":"fn () -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum possible number that `Decimal` can represent.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":13549,"byte_end":13554,"line_start":383,"line_end":383,"column_start":12,"column_end":17},"name":"trunc","qualname":"<Decimal>::trunc","value":"fn (&self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Decimal` integral with no fractional portion.\n This is a true truncation whereby no rounding is performed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":14692,"byte_end":14697,"line_start":421,"line_end":421,"column_start":12,"column_end":17},"name":"fract","qualname":"<Decimal>::fract","value":"fn (&self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Decimal` representing the fractional portion of the number.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":15131,"byte_end":15134,"line_start":437,"line_end":437,"column_start":12,"column_end":15},"name":"abs","qualname":"<Decimal>::abs","value":"fn (&self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value of `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":15499,"byte_end":15504,"line_start":453,"line_end":453,"column_start":12,"column_end":17},"name":"floor","qualname":"<Decimal>::floor","value":"fn (&self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns the largest integer less than or equal to a number.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":16246,"byte_end":16250,"line_start":481,"line_end":481,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Decimal>::ceil","value":"fn (&self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest integer greater than or equal to a number.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":16940,"byte_end":16949,"line_start":507,"line_end":507,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Decimal>::normalize","value":"fn (&self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Strips any trailing zero's from a `Decimal`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":18112,"byte_end":18117,"line_start":545,"line_end":545,"column_start":12,"column_end":17},"name":"round","qualname":"<Decimal>::round","value":"fn (&self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Decimal` number with no fractional portion (i.e. an integer).\n Rounding currently follows \"Bankers Rounding\" rules. e.g. 6.5 -> 6, 7.5 -> 8","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":18760,"byte_end":18782,"line_start":565,"line_end":565,"column_start":12,"column_end":34},"name":"round_dp_with_strategy","qualname":"<Decimal>::round_dp_with_strategy","value":"fn (&self, dp: u32, strategy: RoundingStrategy) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Decimal` number with the specified number of decimal points for fractional\n portion.\n Rounding is performed using the provided `RoundingStrategy`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":23725,"byte_end":23733,"line_start":706,"line_end":706,"column_start":12,"column_end":20},"name":"round_dp","qualname":"<Decimal>::round_dp","value":"fn (&self, dp: u32) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Decimal` number with the specified number of decimal points for fractional portion.\n Rounding currently follows \"Bankers Rounding\" rules. e.g. 6.5 -> 6, 7.5 -> 8","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":24667,"byte_end":24673,"line_start":729,"line_end":729,"column_start":18,"column_end":24},"name":"unpack","qualname":"<Decimal>::unpack","value":"fn (&self) -> UnpackedDecimal","parent":null,"children":[],"decl_id":null,"docs":" Convert `Decimal` to an internal representation of the underlying struct. This is useful\n for debugging the internal state of the object.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":31805,"byte_end":31816,"line_start":909,"line_end":909,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Decimal>::checked_add","value":"fn (self, other: Decimal) -> Option<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" Checked addition. Computes `self + other`, returning `None` if overflow occurred.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":31776,"byte_end":31793,"line_start":908,"line_end":908,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":34368,"byte_end":34379,"line_start":986,"line_end":986,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Decimal>::checked_sub","value":"fn (self, other: Decimal) -> Option<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" Checked subtraction. Computes `self - other`, returning `None` if overflow occurred.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":34339,"byte_end":34356,"line_start":985,"line_end":985,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":34764,"byte_end":34775,"line_start":998,"line_end":998,"column_start":12,"column_end":23},"name":"checked_mul","qualname":"<Decimal>::checked_mul","value":"fn (self, other: Decimal) -> Option<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" Checked multiplication. Computes `self * other`, returning `None` if overflow occurred.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":34743,"byte_end":34752,"line_start":997,"line_end":997,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":42159,"byte_end":42170,"line_start":1171,"line_end":1171,"column_start":12,"column_end":23},"name":"checked_div","qualname":"<Decimal>::checked_div","value":"fn (self, other: Decimal) -> Option<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" Checked division. Computes `self / other`, returning `None` if `other == 0.0` or the\n division results in overflow.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":46799,"byte_end":46810,"line_start":1300,"line_end":1300,"column_start":12,"column_end":23},"name":"checked_rem","qualname":"<Decimal>::checked_rem","value":"fn (self, other: Decimal) -> Option<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" Checked remainder. Computes `self % other`, returning `None` if `other == 0.0`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":440},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\error.rs","byte_start":92747,"byte_end":92752,"line_start":5,"line_end":5,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":441}],"decl_id":null,"docs":" Error type for the library.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\lib.rs","byte_start":1496,"byte_end":1503,"line_start":49,"line_end":49,"column_start":9,"column_end":16},"name":"prelude","qualname":"::prelude","value":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":341}],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":5072,"byte_end":5079,"line_start":123,"line_end":123,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":48608,"byte_end":48615,"line_start":1349,"line_end":1349,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":67097,"byte_end":67104,"line_start":1963,"line_end":1963,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":67372,"byte_end":67379,"line_start":1978,"line_end":1978,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":67542,"byte_end":67549,"line_start":1989,"line_end":1989,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":74109,"byte_end":74116,"line_start":2148,"line_end":2148,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":78622,"byte_end":78629,"line_start":2296,"line_end":2296,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":79779,"byte_end":79786,"line_start":2344,"line_end":2344,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":81789,"byte_end":81796,"line_start":2400,"line_end":2400,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":81926,"byte_end":81933,"line_start":2406,"line_end":2406,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":82640,"byte_end":82647,"line_start":2441,"line_end":2441,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":82904,"byte_end":82911,"line_start":2451,"line_end":2451,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":83679,"byte_end":83686,"line_start":2483,"line_end":2483,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":83943,"byte_end":83950,"line_start":2493,"line_end":2493,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":84713,"byte_end":84720,"line_start":2525,"line_end":2525,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":84977,"byte_end":84984,"line_start":2535,"line_end":2535,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":85812,"byte_end":85819,"line_start":2567,"line_end":2567,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":86076,"byte_end":86083,"line_start":2577,"line_end":2577,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":86835,"byte_end":86842,"line_start":2609,"line_end":2609,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":87099,"byte_end":87106,"line_start":2619,"line_end":2619,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":87535,"byte_end":87542,"line_start":2637,"line_end":2637,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":87657,"byte_end":87664,"line_start":2644,"line_end":2644,"column_start":13,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":87683,"byte_end":87690,"line_start":2646,"line_end":2646,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":87889,"byte_end":87896,"line_start":2655,"line_end":2655,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":88030,"byte_end":88037,"line_start":2662,"line_end":2662,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":89614,"byte_end":89621,"line_start":2709,"line_end":2709,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\error.rs","byte_start":92784,"byte_end":92789,"line_start":9,"line_end":9,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\error.rs","byte_start":93161,"byte_end":93166,"line_start":21,"line_end":21,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\error.rs","byte_start":93258,"byte_end":93263,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\serde_types.rs","byte_start":93525,"byte_end":93532,"line_start":9,"line_end":9,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\serde_types.rs","byte_start":93784,"byte_end":93798,"line_start":20,"line_end":20,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":326},{"krate":0,"index":328},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\serde_types.rs","byte_start":95055,"byte_end":95062,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":5072,"byte_end":5079,"line_start":123,"line_end":123,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":48608,"byte_end":48615,"line_start":1349,"line_end":1349,"column_start":18,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":2080}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":67097,"byte_end":67104,"line_start":1963,"line_end":1963,"column_start":15,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":357},"to":{"krate":17,"index":302}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":67372,"byte_end":67379,"line_start":1978,"line_end":1978,"column_start":14,"column_end":21},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":357},"to":{"krate":17,"index":312}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":67542,"byte_end":67549,"line_start":1989,"line_end":1989,"column_start":18,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":6029}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":74109,"byte_end":74116,"line_start":2148,"line_end":2148,"column_start":24,"column_end":31},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":357},"to":{"krate":17,"index":154}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":78622,"byte_end":78629,"line_start":2296,"line_end":2296,"column_start":22,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":357},"to":{"krate":17,"index":129}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":79779,"byte_end":79786,"line_start":2344,"line_end":2344,"column_start":23,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":6833}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":81789,"byte_end":81796,"line_start":2400,"line_end":2400,"column_start":21,"column_end":28},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":6831}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":81926,"byte_end":81933,"line_start":2406,"line_end":2406,"column_start":14,"column_end":21},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":1520}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":82640,"byte_end":82647,"line_start":2441,"line_end":2441,"column_start":20,"column_end":27},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":1526}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":82904,"byte_end":82911,"line_start":2451,"line_end":2451,"column_start":37,"column_end":44},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":1526}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":83679,"byte_end":83686,"line_start":2483,"line_end":2483,"column_start":20,"column_end":27},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":1530}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":83943,"byte_end":83950,"line_start":2493,"line_end":2493,"column_start":37,"column_end":44},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":1530}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":84713,"byte_end":84720,"line_start":2525,"line_end":2525,"column_start":20,"column_end":27},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":1534}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":84977,"byte_end":84984,"line_start":2535,"line_end":2535,"column_start":37,"column_end":44},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":1534}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":85812,"byte_end":85819,"line_start":2567,"line_end":2567,"column_start":20,"column_end":27},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":1538}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":86076,"byte_end":86083,"line_start":2577,"line_end":2577,"column_start":37,"column_end":44},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":1538}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":86835,"byte_end":86842,"line_start":2609,"line_end":2609,"column_start":20,"column_end":27},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":1542}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":87099,"byte_end":87106,"line_start":2619,"line_end":2619,"column_start":37,"column_end":44},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":1542}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":87535,"byte_end":87542,"line_start":2637,"line_end":2637,"column_start":20,"column_end":27},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":1936}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":87657,"byte_end":87664,"line_start":2644,"line_end":2644,"column_start":13,"column_end":20},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":1940}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":87683,"byte_end":87690,"line_start":2646,"line_end":2646,"column_start":15,"column_end":22},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":6488}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":87889,"byte_end":87896,"line_start":2655,"line_end":2655,"column_start":21,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":1970}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":88030,"byte_end":88037,"line_start":2662,"line_end":2662,"column_start":14,"column_end":21},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":1960}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\decimal.rs","byte_start":89614,"byte_end":89621,"line_start":2709,"line_end":2709,"column_start":14,"column_end":21},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":3413}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\error.rs","byte_start":92784,"byte_end":92789,"line_start":9,"line_end":9,"column_start":6,"column_end":11},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\error.rs","byte_start":93161,"byte_end":93166,"line_start":21,"line_end":21,"column_start":23,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":440},"to":{"krate":1,"index":1542}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\error.rs","byte_start":93258,"byte_end":93263,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":440},"to":{"krate":2,"index":6833}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\serde_types.rs","byte_start":93525,"byte_end":93532,"line_start":9,"line_end":9,"column_start":39,"column_end":46},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":357},"to":{"krate":21,"index":1194}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\serde_types.rs","byte_start":93784,"byte_end":93798,"line_start":20,"line_end":20,"column_start":39,"column_end":53},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":316},"to":{"krate":21,"index":1278}},{"span":{"file_name":"C:\\Users\\Alex\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rust_decimal-1.0.2\\src\\serde_types.rs","byte_start":95055,"byte_end":95062,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":357},"to":{"krate":21,"index":1638}}]}